{"version":3,"sources":["components/App/img/logo.svg","components/AppHeader/css/Style.js","components/AppHeader/AppHeader.js","components/PokemonOverview/components/TablePaginationActions/css/Style.js","components/PokemonOverview/components/TablePaginationActions/TablePaginationActions.js","components/PokemonOverview/components/CustomPaginationActionsTable/css/Style.js","constants/constants.js","components/PokemonOverview/components/CustomPaginationActionsTable/CustomPaginationActionsTable.js","components/PokemonOverview/PokemonsOverview.js","components/App/App.js","models/PokemonModel.js","stores/DataStore.js","stores/ViewStore.js","index.js"],"names":["module","exports","__webpack_require__","p","styles","theme","root","width","grow","flexGrow","menuButton","marginLeft","marginRight","title","Object","defineProperty","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","&:hover","spacing","unit","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingTop","paddingRight","paddingBottom","paddingLeft","transition","transitions","create","AppHeader","delay","timer","callback","ms","clearTimeout","setTimeout","handleSearchBoxChange","event","searchValue","target","value","length","_this","props","viewStore","setSearchValue","dataStore","setPokemonStats","classes","this","react_default","a","createElement","className","AppBar_default","Toolbar_default","Typography_default","variant","noWrap","Search_default","InputBase_default","placeholder","input","onChange","React","Component","withStyles","flexShrink","text","secondary","TablePaginationActions","handleFirstPageButtonClick","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","IconButton_default","onClick","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","withTheme","marginTop","table","minWidth","tableWrapper","overflowX","avatarImg","spacer","flex","typeCircle","colorNormal","colorFighting","colorFlying","colorPoison","PokemonType","normal","fighting","flying","poison","ground","rock","bug","ghost","steel","fire","water","grass","electric","psychic","ice","dragon","dark","fairy","unknown","shadow","CustomPaginationActionsTable","observer","handleChangePage","setPage","handleChangeRowsPerPage","setLimit","Number","pokemonsCount","renderTypesSection","pokemon","console","log","types","type","name","map","t","concat","_this2","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","align","TableBody_default","getPokemons","row","key","Avatar_default","alt","src","avatarUrl","img","stats","filter","s","stat","base_stat","TableFooter_default","TablePagination_default","rowsPerPageOptions","colSpan","limit","SelectProps","native","onChangeRowsPerPage","ActionsComponent","labelDisplayedRows","_ref","from","to","labelRowsPerPage","PokemonOverview","components_CustomPaginationActionsTable_CustomPaginationActionsTable","App","components_AppHeader_AppHeader","loading","logo","PokemonsOverview","PokemonModel","id","classCallCheck","propTypes","PropTypes","string","isRequired","array","DataStore","initializerDefineProperty","_descriptor","init","loadPokemons","setLoading","P","Pokedox","getPokemonsList","response","pokeList","results","firstPageData","slice","item","getPokemonByName","pInfo","sprites","front_default","fromJS","_context2","t1","pokemons","result","then","toConsumableArray","trim","includes","data","checkFilter","getFilteredData","observable","action","ViewStore","resetPgination","pageNum","resetPagination","ReactDOM","render","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.b2a19d50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import { fade } from '@material-ui/core/styles/colorManipulator';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n      width: '100%',\r\n    },\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginLeft: -12,\r\n      marginRight: 20,\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing.unit * 2,\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing.unit * 3,\r\n        width: 'auto',\r\n      },\r\n    },\r\n    searchIcon: {\r\n      width: theme.spacing.unit * 9,\r\n      height: '100%',\r\n      position: 'absolute',\r\n      pointerEvents: 'none',\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n      width: '100%',\r\n    },\r\n    inputInput: {\r\n      paddingTop: theme.spacing.unit,\r\n      paddingRight: theme.spacing.unit,\r\n      paddingBottom: theme.spacing.unit,\r\n      paddingLeft: theme.spacing.unit * 10,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: 200,\r\n      },\r\n    },\r\n  });\r\n\r\n  export default styles;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport styles from './css/Style';\r\n\r\nclass AppHeader extends React.Component {\r\n  delay = (() => {\r\n            var timer = 0;\r\n            return (callback, ms) => {\r\n                clearTimeout(timer);\r\n                timer = setTimeout(callback, ms);\r\n            };\r\n        })();\r\n\r\n  handleSearchBoxChange = event => {\r\n    let searchValue = event.target.value;\r\n    if (searchValue && (searchValue.length >= 3 || searchValue.length === 0) || !searchValue) {\r\n      this.delay(() => {\r\n        this.props.viewStore.setSearchValue(searchValue);\r\n        this.props.dataStore.setPokemonStats(); }, 700);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className={classes.root}>\r\n        <AppBar position=\"static\">\r\n          <Toolbar>\r\n            <Typography className={classes.title} variant=\"h6\" color=\"inherit\" noWrap>\r\n              PokeDex\r\n            </Typography>\r\n            <div className={classes.search}>\r\n              <div className={classes.searchIcon}>\r\n                <SearchIcon />\r\n              </div>\r\n              <InputBase\r\n                placeholder=\"Поиск по покемонам\"\r\n                classes={{\r\n                  root: classes.inputRoot,\r\n                  input: classes.inputInput,\r\n                }}\r\n                onChange={this.handleSearchBoxChange}\r\n              />\r\n            </div>\r\n            <div className={classes.grow} />\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nAppHeader.propTypes = {\r\n  viewStore: PropTypes.object.isRequired,\r\n  dataStore: PropTypes.object.isRequired,\r\n  classes: PropTypes.object.isRequired\r\n}\r\n\r\nexport default withStyles(styles)(AppHeader);","const styles = theme => ({\r\n  root: {\r\n    flexShrink: 0,\r\n    color: theme.palette.text.secondary,\r\n    marginLeft: theme.spacing.unit * 2.5\r\n  }\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\nimport styles from './css/Style';\r\n\r\nclass TablePaginationActions extends React.Component {\r\n  handleFirstPageButtonClick = event => {\r\n    this.props.onChangePage(event, 0);\r\n  };\r\n\r\n  handleBackButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page - 1);\r\n  };\r\n\r\n  handleNextButtonClick = event => {\r\n    this.props.onChangePage(event, this.props.page + 1);\r\n  };\r\n\r\n  handleLastPageButtonClick = event => {\r\n    this.props.onChangePage(\r\n      event,\r\n      Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, count, page, rowsPerPage, theme } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <IconButton\r\n          onClick={this.handleFirstPageButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"Первая страница\"\r\n        >\r\n          {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleBackButtonClick}\r\n          disabled={page === 0}\r\n          aria-label=\"Предыдущая страница\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleNextButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"Следующая страница\"\r\n        >\r\n          {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n        </IconButton>\r\n        <IconButton\r\n          onClick={this.handleLastPageButtonClick}\r\n          disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n          aria-label=\"Последняя страница\"\r\n        >\r\n          {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n        </IconButton>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTablePaginationActions.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  count: PropTypes.number.isRequired,\r\n  onChangePage: PropTypes.func.isRequired,\r\n  page: PropTypes.number.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles, { withTheme: true })(\r\n  TablePaginationActions,\r\n);","const styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    minWidth: 500\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  },\r\n  avatarImg: {\r\n    width: \"auto\",\r\n    height: \"auto\"\r\n  },\r\n  spacer: {\r\n    flex: '0'\r\n  },\r\n  typeCircle: {\r\n    borderRadius: '50%',\r\n    width: '10px',\r\n    height: '10px'\r\n  },\r\n  colorNormal: {\r\n    backgroundColor: '#1FB400'\r\n  },\r\n  colorFighting: {\r\n    backgroundColor: '#D88400'\r\n  },\r\n  colorFlying: {\r\n    backgroundColor: '#09B2C1'\r\n  },\r\n  colorPoison: {\r\n    backgroundColor: '#08D836'\r\n  }\r\n});\r\n\r\nexport default styles;\r\n","export const TABLE_VIEW = 'table';\r\nexport const CARDS_VIEW = 'cards';\r\nexport const PokemonType = {\r\n    \"normal\": \"colorNormal\",\r\n    \"fighting\": \"colorFighting\",\r\n    \"flying\": \"colorFlying\",\r\n    \"poison\": \"colorPoison\",\r\n    \"ground\": \"colorGround\",\r\n    \"rock\": \"colorRock\",\r\n    \"bug\": \"colorBug\",\r\n    \"ghost\": \"colorGhost\",\r\n    \"steel\": \"colorSteel\",\r\n    \"fire\": \"colorFire\",\r\n    \"water\": \"colorWater\",\r\n    \"grass\": \"colorGrass\",\r\n    \"electric\": \"colorElectric\",\r\n    \"psychic\": \"colorPsychic\",\r\n    \"ice\": \"colorIce\",\r\n    \"dragon\": \"colorDragon\",\r\n    \"dark\": \"colorDark\",\r\n    \"fairy\": \"colorFairy\",\r\n    \"unknown\": \"colorUnknown\",\r\n    \"shadow\": \"colorShadow\"\r\n};","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TablePaginationActions from \"../TablePaginationActions/TablePaginationActions\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableFooter from \"@material-ui/core/TableFooter\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport styles from \"./css/Style\";\r\nimport { observer } from \"mobx-react\";\r\nimport { PokemonType } from \"../../../../constants/constants\";\r\n\r\n@observer\r\nclass CustomPaginationActionsTable extends React.Component {\r\n  handleChangePage = (event, page) => {\r\n    this.props.viewStore.setPage(page);\r\n    this.props.dataStore.setPokemonStats();\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.props.viewStore.setLimit(\r\n      Number(event.target.value),\r\n      this.props.dataStore.pokemonsCount\r\n    );\r\n    this.props.dataStore.setPokemonStats();\r\n  };\r\n\r\n  renderTypesSection = pokemon => {\r\n    console.log(\"PokemonType: \", PokemonType[pokemon.types[0].type.name])\r\n    let {classes} = this.props;\r\n    \r\n    let types = pokemon.types.map(t => \r\n      {\r\n        let className = `${classes.typeCircle} ${classes[PokemonType[t.type.name]]}`;\r\n        return (<div className={className}></div>)\r\n      } );\r\n    return (\r\n      <div>\r\n        {types}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { classes, viewStore, dataStore } = this.props;\r\n\r\n    return (\r\n      <Paper className={classes.root}>\r\n        <div className={classes.tableWrapper}>\r\n          <Table className={classes.table}>\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell />\r\n                <TableCell align=\"center\">Тип</TableCell>\r\n                <TableCell align=\"center\">Имя</TableCell>\r\n                <TableCell align=\"center\">Скорость</TableCell>\r\n                <TableCell align=\"center\">Атака</TableCell>\r\n                <TableCell align=\"center\">Защита</TableCell>\r\n                <TableCell align=\"center\">Спец. атака</TableCell>\r\n                <TableCell align=\"center\">Спец. защита</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {dataStore.getPokemons.map(row => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell align=\"center\">\r\n                    <Avatar\r\n                      alt={row.name}\r\n                      src={row.avatarUrl}\r\n                      classes={{ img: classes.avatarImg }}\r\n                    />\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <div>\r\n                      {this.renderTypesSection(row)}\r\n                    </div>\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">{row.name}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.stats &&\r\n                      row.stats.filter(s => s.stat.name == \"speed\")[0]\r\n                        .base_stat}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.stats &&\r\n                      row.stats.filter(s => s.stat.name == \"attack\")[0]\r\n                        .base_stat}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.stats &&\r\n                      row.stats.filter(s => s.stat.name == \"defense\")[0]\r\n                        .base_stat}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.stats &&\r\n                      row.stats.filter(s => s.stat.name == \"special-attack\")[0]\r\n                        .base_stat}\r\n                  </TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {row.stats &&\r\n                      row.stats.filter(s => s.stat.name == \"special-defense\")[0]\r\n                        .base_stat}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                <TablePagination\r\n                  classes={{\r\n                    spacer: classes.spacer\r\n                  }}\r\n                  rowsPerPageOptions={[10, 20, 50]}\r\n                  colSpan={7}\r\n                  count={dataStore.pokemonsCount}\r\n                  rowsPerPage={viewStore.limit}\r\n                  page={viewStore.page}\r\n                  SelectProps={{\r\n                    native: true\r\n                  }}\r\n                  onChangePage={this.handleChangePage}\r\n                  onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n                  ActionsComponent={TablePaginationActions}\r\n                  labelDisplayedRows={({ from, to, count }) =>\r\n                    `${from}-${to} из ${count}`\r\n                  }\r\n                  labelRowsPerPage={\"Строк на страницу: \"}\r\n                />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n        </div>\r\n      </Paper>\r\n    );\r\n  }\r\n}\r\n\r\nCustomPaginationActionsTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  viewStore: PropTypes.object.isRequired,\r\n  dataStore: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(CustomPaginationActionsTable);","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CustomPaginationActionsTable from \"./components/CustomPaginationActionsTable/CustomPaginationActionsTable\";\r\nimport { observer } from \"mobx-react\";\r\nimport { TABLE_VIEW, CARDS_VIEW } from \"../../constants/constants\";\r\n\r\n@observer\r\nclass PokemonOverview extends React.Component {\r\n  render() {\r\n    const { dataStore, viewStore } = this.props;\r\n  \r\n    return (\r\n      <CustomPaginationActionsTable\r\n        dataStore={dataStore}\r\n        viewStore={viewStore}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nPokemonOverview.propTypes = {\r\n  viewStore: PropTypes.object.isRequired,\r\n  dataStore: PropTypes.object.isRequired\r\n};\r\n\r\nexport default PokemonOverview;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport AppHeader from \"../AppHeader/AppHeader\";\nimport PokemonOverview from \"../PokemonOverview/PokemonsOverview\";\nimport logo from \"./img/logo.svg\";\nimport \"./css/App.css\";\nimport { observer } from \"mobx-react\";\n\n@observer\nclass App extends Component {\n  render() {\n    const { dataStore, viewStore } = this.props;\n\n    return (\n      <div className=\"app\">\n        <AppHeader viewStore={viewStore} dataStore={dataStore} />\n        {viewStore.loading ? (\n          <div>\n            <div className=\"loader-container\">\n              <img src={logo} className=\"loader-logo\" alt=\"Загрузка\" />\n              <p>Загрузка</p>\n            </div>\n            \n          </div>\n        ) : (\n          null\n        )}\n        <div>\n              <PokemonOverview dataStore={dataStore} viewStore={viewStore} />\n            </div>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  viewStore: PropTypes.object.isRequired,\n  dataStore: PropTypes.object.isRequired\n};\n\nexport default App;\n","import PropTypes from \"prop-types\";\r\n\r\nclass PokemonModel {\r\n  id;\r\n  name;\r\n  avatarUrl;\r\n  types;\r\n  stats;\r\n\r\n  constructor(id, name, avatarUrl, types, stats) {\r\n    this.id = id;\r\n    this.name = name;\r\n    this.avatarUrl = avatarUrl;\r\n    this.types = types;\r\n    this.stats = stats;\r\n  }\r\n}\r\n\r\nPokemonModel.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  avatarUrl: PropTypes.string.isRequired,\r\n  types: PropTypes.array.isRequired,\r\n  stats: PropTypes.array.isRequired\r\n};\r\n\r\nexport default PokemonModel;\r\n","import { observable, action } from 'mobx';\r\nimport PokemonModel from '../models/PokemonModel';\r\nimport Pokedox from 'pokedex-promise-v2';\r\n\r\nexport default class DataStore {\r\n  viewStore;\r\n  constructor(viewStore) {\r\n    this.viewStore = viewStore;\r\n    this.init();\r\n  }\r\n\r\n  @observable pokemons = [];\r\n  pokemonsCount = 0;\r\n\r\n  async init() {\r\n    this.loadPokemons();\r\n  }\r\n\r\n  // Получение списка покемонов без характеристик (API этого не предусматривает)\r\n  async loadPokemons() {\r\n    this.viewStore.setLoading(true);\r\n    try {\r\n      let P = new Pokedox();\r\n      let response = await P.getPokemonsList();\r\n      this.pokemonsCount = response.count;\r\n      let pokeList = [...response.results];\r\n      // Берём порцию данных для первой страницы\r\n      let firstPageData = pokeList.slice(this.viewStore.page * this.viewStore.limit, this.viewStore.page * this.viewStore.limit + this.viewStore.limit);\r\n      // Для каждого покемона из коллекции дергаем API чтобы получить характеристики (их нужно вывести в таблице)\r\n      for (let item of firstPageData) {\r\n        var pInfo = await P.getPokemonByName(item.name);\r\n        item.id = pInfo.id;\r\n        item.avatarUrl = pInfo.sprites.front_default;\r\n        item.type = pInfo.types;\r\n        item.stats = pInfo.stats;\r\n       }\r\n       // Формируем нужные нам модельки и записываем в observable\r\n      this.fromJS(pokeList);\r\n    } catch (err) {\r\n      console.log(err);\r\n    }\r\n    this.viewStore.setLoading(false);\r\n  }\r\n\r\n  fromJS(array) {\r\n    this.pokemons = array.map(item => new PokemonModel(item.id, item.name, item.avatarUrl, item.type, item.stats));\r\n  }\r\n\r\n  // Получение статистики для порции данных\r\n  @action\r\n  async setPokemonStats() {\r\n    this.viewStore.setLoading(true);\r\n    let result = this.getPokemons;\r\n    let P = new Pokedox();\r\n    for (let item of result) {\r\n     await P.getPokemonByName(item.name).then(pInfo => {\r\n        item.id = pInfo.id;\r\n        item.avatarUrl = pInfo.sprites.front_default;\r\n        item.types = pInfo.types;\r\n        item.stats = pInfo.stats;\r\n      });\r\n    }\r\n    this.pokemons = [...this.pokemons];\r\n    this.viewStore.setLoading(false);\r\n  }\r\n\r\n  // Получение порции данных с принудительной фильтрацией, в случае если фильтр не пуст\r\n  get getPokemons() {\r\n    let data = this.checkFilter()\r\n      ? this.getFilteredData()\r\n      : this.pokemons;\r\n    this.pokemonsCount = data.length;\r\n    return data.slice(this.viewStore.page * this.viewStore.limit, this.viewStore.page * this.viewStore.limit + this.viewStore.limit)\r\n  }\r\n\r\n  // Проверка заполнен ли фильтр\r\n  checkFilter() {\r\n    return this.viewStore.searchValue && this.viewStore.searchValue.trim().length >= 3;\r\n  }\r\n\r\n  // Получение отфильтрованных данных\r\n  getFilteredData() {\r\n    return this.pokemons.filter(p => p.name.includes(this.viewStore.searchValue.trim()))\r\n  }\r\n}","import {observable, action} from 'mobx';\r\n\r\nexport default class ViewStore {\r\n  /*\r\n  // loading - флаг состояния отображения лоадера во вьюхах\r\n  // limit - количество записей для отображения на одной странице\r\n  // page - текущая страница в представлении\r\n  // searchValue - значение в фильтре поиска\r\n  */\r\n  @observable loading = false;\r\n  limit = 10;\r\n  page = 0;\r\n  searchValue = \"\";\r\n  \r\n  @action\r\n  setLoading = (loading) => {\r\n    this.loading = loading;\r\n  }\r\n\r\n  setSearchValue = (value) => {\r\n    this.searchValue = value;\r\n    this.resetPgination();\r\n  }\r\n\r\n  setLimit = (limit, pokemonsCount) => {\r\n    this.limit = limit;\r\n    let pageNum = Math.max(0, Math.ceil(pokemonsCount / limit) - 1);\r\n    if (this.page > pageNum)\r\n      this.page = pageNum;\r\n  }\r\n\r\n  setPage = (page) => {\r\n    this.page = page;\r\n  }\r\n\r\n  resetPagination = () => {\r\n    this.resetPgination();\r\n  }\r\n\r\n  resetPgination() {\r\n    this.page = 0;\r\n  }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'typeface-roboto';\nimport './index.css';\nimport App from './components/App/App';\nimport { DataStore, ViewStore } from './stores/index';\n\nconst viewStore = new ViewStore();\nconst dataStore = new DataStore(viewStore);\n\nReactDOM.render(<App dataStore={dataStore} viewStore={viewStore} />, document.getElementById('root'));\n"],"sourceRoot":""}